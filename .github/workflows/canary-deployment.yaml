name: Canary Deployment

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'

env:
  REGISTRY: api.magalu.cloud
  MAGALU_REGION: br-se1
  TF_VAR_api_key: ${{ secrets.MAGALU_API_KEY }}
  CANARY_WEIGHT: 20
  IMAGE_NAME: dev-oda-fsfg

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run tests
        run: npm test -- --watchAll=false

  deploy-canary:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        
      - name: Configure Docker
        uses: docker/setup-buildx-action@v2

      - name: Docker Login
        env:
          MGC_API_KEY: ${{ secrets.MAGALU_API_KEY }}
        run: docker login ${{ env.REGISTRY }} -u oauth2 -p "$MGC_API_KEY"

      - name: Create repository
        env:
          MGC_API_KEY: ${{ secrets.MAGALU_API_KEY }}
        run: |
          curl -X POST \
            -H "x-api-key: $MGC_API_KEY" \
            -H "Accept: application/json" \
            -H "Content-Type: application/json" \
            -d "{\"name\":\"${{ env.IMAGE_NAME }}\"}" \
            "https://${{ env.REGISTRY }}/v2/${{ env.MAGALU_REGION }}/repositories"
        continue-on-error: true

      - name: Wait for repository creation
        run: sleep 10

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.MAGALU_REGION }}/${{ env.IMAGE_NAME }}:canary
            ${{ env.REGISTRY }}/${{ env.MAGALU_REGION }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          build-args: |
            REACT_APP_VERSION=${{ github.sha }}

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        run: terraform apply -auto-approve
        
      - name: Wait for deployment
        run: sleep 60  # Aguarda 1 minuto para a VM inicializar

      - name: Monitor Canary Health
        id: monitor
        run: |
          chmod +x ./scripts/deploy/monitor-canary.sh
          ./scripts/deploy/monitor-canary.sh
        
      - name: Rollback if Canary Unhealthy
        if: failure()
        run: |
          echo "Canary unhealthy, rolling back..."
          terraform destroy -target=module.app_canary -auto-approve

  promote-to-stable:
    needs: deploy-canary
    runs-on: ubuntu-latest
    steps:
      - name: Promote Canary to Stable
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.MAGALU_REGION }}/${{ env.IMAGE_NAME }}:stable

      # Aqui você pode adicionar steps para atualizar a versão stable
      # Por exemplo, atualizar um deployment do Kubernetes ou outra VM
